<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateAsync(string,string,string,FaceRecognitionModel?,CancellationToken)">
      <example>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = await client.CreateAsync("your_large_face_list_id", "your_large_face_list_name");
]]></code></example>
    </member>
    <member name="Create(string,string,string,FaceRecognitionModel?,CancellationToken)">
      <example>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = client.Create("your_large_face_list_id", "your_large_face_list_name");
]]></code></example>
    </member>
    <member name="CreateAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

using RequestContent content = RequestContent.Create(new
{
    name = "your_large_face_list_name",
    userData = "your_user_data",
    recognitionModel = "recognition_01",
});
Response response = await client.CreateAsync("your_large_face_list_id", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Create(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Create.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

using RequestContent content = RequestContent.Create(new
{
    name = "your_large_face_list_name",
    userData = "your_user_data",
    recognitionModel = "recognition_01",
});
Response response = client.Create("your_large_face_list_id", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = await client.DeleteAsync("your_large_face_list_id");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Delete(string,RequestContext)">
      <example>
This sample shows how to call Delete.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = client.Delete("your_large_face_list_id");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetLargeFaceListAsync(string,bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceListAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response<LargeFaceList> response = await client.GetLargeFaceListAsync("your_large_face_list_id");
]]></code></example>
    </member>
    <member name="GetLargeFaceList(string,bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceList.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response<LargeFaceList> response = client.GetLargeFaceList("your_large_face_list_id");
]]></code></example>
    </member>
    <member name="GetLargeFaceListAsync(string,bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceListAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = await client.GetLargeFaceListAsync("your_large_face_list_id", true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="GetLargeFaceList(string,bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceList and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = client.GetLargeFaceList("your_large_face_list_id", true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("name").ToString());
Console.WriteLine(result.GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="UpdateAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

using RequestContent content = RequestContent.Create(new
{
    name = "your_large_face_list_name",
    userData = "your_user_data",
});
Response response = await client.UpdateAsync("your_large_face_list_id", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Update(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Update.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

using RequestContent content = RequestContent.Create(new
{
    name = "your_large_face_list_name",
    userData = "your_user_data",
});
Response response = client.Update("your_large_face_list_id", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetLargeFaceListsAsync(string,int?,bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceListsAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response<IReadOnlyList<LargeFaceList>> response = await client.GetLargeFaceListsAsync();
]]></code></example>
    </member>
    <member name="GetLargeFaceLists(string,int?,bool?,CancellationToken)">
      <example>
This sample shows how to call GetLargeFaceLists.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response<IReadOnlyList<LargeFaceList>> response = client.GetLargeFaceLists();
]]></code></example>
    </member>
    <member name="GetLargeFaceListsAsync(string,int?,bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceListsAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = await client.GetLargeFaceListsAsync("my_list_id", 20, true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("name").ToString());
Console.WriteLine(result[0].GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="GetLargeFaceLists(string,int?,bool?,RequestContext)">
      <example>
This sample shows how to call GetLargeFaceLists and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = client.GetLargeFaceLists("my_list_id", 20, true, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("name").ToString());
Console.WriteLine(result[0].GetProperty("largeFaceListId").ToString());
]]></code></example>
    </member>
    <member name="GetTrainingStatusAsync(string,CancellationToken)">
      <example>
This sample shows how to call GetTrainingStatusAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response<FaceTrainingResult> response = await client.GetTrainingStatusAsync("your_large_face_list_id");
]]></code></example>
    </member>
    <member name="GetTrainingStatus(string,CancellationToken)">
      <example>
This sample shows how to call GetTrainingStatus.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response<FaceTrainingResult> response = client.GetTrainingStatus("your_large_face_list_id");
]]></code></example>
    </member>
    <member name="GetTrainingStatusAsync(string,RequestContext)">
      <example>
This sample shows how to call GetTrainingStatusAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = await client.GetTrainingStatusAsync("your_large_face_list_id", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("lastSuccessfulTrainingDateTime").ToString());
]]></code></example>
    </member>
    <member name="GetTrainingStatus(string,RequestContext)">
      <example>
This sample shows how to call GetTrainingStatus and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = client.GetTrainingStatus("your_large_face_list_id", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("status").ToString());
Console.WriteLine(result.GetProperty("createdDateTime").ToString());
Console.WriteLine(result.GetProperty("lastActionDateTime").ToString());
Console.WriteLine(result.GetProperty("lastSuccessfulTrainingDateTime").ToString());
]]></code></example>
    </member>
    <member name="DeleteFaceAsync(string,Guid,RequestContext)">
      <example>
This sample shows how to call DeleteFaceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = await client.DeleteFaceAsync("your_large_face_list_id", Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DeleteFace(string,Guid,RequestContext)">
      <example>
This sample shows how to call DeleteFace.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = client.DeleteFace("your_large_face_list_id", Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetFaceAsync(string,Guid,CancellationToken)">
      <example>
This sample shows how to call GetFaceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response<LargeFaceListFace> response = await client.GetFaceAsync("your_large_face_list_id", Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"));
]]></code></example>
    </member>
    <member name="GetFace(string,Guid,CancellationToken)">
      <example>
This sample shows how to call GetFace.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response<LargeFaceListFace> response = client.GetFace("your_large_face_list_id", Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"));
]]></code></example>
    </member>
    <member name="GetFaceAsync(string,Guid,RequestContext)">
      <example>
This sample shows how to call GetFaceAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = await client.GetFaceAsync("your_large_face_list_id", Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="GetFace(string,Guid,RequestContext)">
      <example>
This sample shows how to call GetFace and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = client.GetFace("your_large_face_list_id", Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"), null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="UpdateFaceAsync(string,Guid,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateFaceAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

using RequestContent content = RequestContent.Create(new
{
    userData = "your_user_data",
});
Response response = await client.UpdateFaceAsync("your_large_face_list_id", Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"), content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="UpdateFace(string,Guid,RequestContent,RequestContext)">
      <example>
This sample shows how to call UpdateFace.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

using RequestContent content = RequestContent.Create(new
{
    userData = "your_user_data",
});
Response response = client.UpdateFace("your_large_face_list_id", Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"), content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetFacesAsync(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetFacesAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response<IReadOnlyList<LargeFaceListFace>> response = await client.GetFacesAsync("your_large_face_list_id");
]]></code></example>
    </member>
    <member name="GetFaces(string,string,int?,CancellationToken)">
      <example>
This sample shows how to call GetFaces.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response<IReadOnlyList<LargeFaceListFace>> response = client.GetFaces("your_large_face_list_id");
]]></code></example>
    </member>
    <member name="GetFacesAsync(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetFacesAsync and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = await client.GetFacesAsync("your_large_face_list_id", "00000000-0000-0000-0000-000000000000", 20, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="GetFaces(string,string,int?,RequestContext)">
      <example>
This sample shows how to call GetFaces and parse the result.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Response response = client.GetFaces("your_large_face_list_id", "00000000-0000-0000-0000-000000000000", 20, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].GetProperty("persistedFaceId").ToString());
]]></code></example>
    </member>
    <member name="TrainAsync(WaitUntil,string,RequestContext)">
      <example>
This sample shows how to call TrainAsync.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Operation operation = await client.TrainAsync(WaitUntil.Completed, "your_large_face_list_id");
]]></code></example>
    </member>
    <member name="Train(WaitUntil,string,RequestContext)">
      <example>
This sample shows how to call Train.
<code><![CDATA[
Uri endpoint = new Uri("<endpoint>");
AzureKeyCredential credential = new AzureKeyCredential("<key>");
LargeFaceListClient client = new FaceAdministrationClient(endpoint, credential).GetLargeFaceListClient();

Operation operation = client.Train(WaitUntil.Completed, "your_large_face_list_id");
]]></code></example>
    </member>
  </members>
</doc>