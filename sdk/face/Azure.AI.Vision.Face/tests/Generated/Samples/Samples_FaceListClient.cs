// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace Azure.AI.Vision.Face.Samples
{
    public partial class Samples_FaceListClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceList_Create_CreateFaceList()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "your_face_list_name",
                userData = "your_user_data",
                recognitionModel = "recognition_01",
            });
            Response response = client.Create("your_face_list_id", content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceList_Create_CreateFaceList_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "your_face_list_name",
                userData = "your_user_data",
                recognitionModel = "recognition_01",
            });
            Response response = await client.CreateAsync("your_face_list_id", content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceList_Create_CreateFaceList_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response response = client.Create("your_face_list_id", "your_face_list_name");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceList_Create_CreateFaceList_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response response = await client.CreateAsync("your_face_list_id", "your_face_list_name");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceList_Delete_DeleteFaceList()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response response = client.Delete("your_face_list_id");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceList_Delete_DeleteFaceList_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response response = await client.DeleteAsync("your_face_list_id");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceList_GetFaceList_GetFaceList()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response response = client.GetFaceList("your_face_list_id", true, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("faceListId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceList_GetFaceList_GetFaceList_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response response = await client.GetFaceListAsync("your_face_list_id", true, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("faceListId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceList_GetFaceList_GetFaceList_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response<FaceList> response = client.GetFaceList("your_face_list_id");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceList_GetFaceList_GetFaceList_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response<FaceList> response = await client.GetFaceListAsync("your_face_list_id");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceList_Update_UpdateFaceList()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "your_face_list_name",
                userData = "your_user_data",
            });
            Response response = client.Update("your_face_list_id", content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceList_Update_UpdateFaceList_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "your_face_list_name",
                userData = "your_user_data",
            });
            Response response = await client.UpdateAsync("your_face_list_id", content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceList_GetFaceLists_GetFaceLists()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response response = client.GetFaceLists(true, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("name").ToString());
            Console.WriteLine(result[0].GetProperty("faceListId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceList_GetFaceLists_GetFaceLists_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response response = await client.GetFaceListsAsync(true, null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result[0].GetProperty("name").ToString());
            Console.WriteLine(result[0].GetProperty("faceListId").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceList_GetFaceLists_GetFaceLists_Convenience()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response<IReadOnlyList<FaceListItem>> response = client.GetFaceLists();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceList_GetFaceLists_GetFaceLists_Convenience_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response<IReadOnlyList<FaceListItem>> response = await client.GetFaceListsAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FaceListFace_DeleteFace_DeleteFaceFromFaceList()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response response = client.DeleteFace("your_face_list_id", Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FaceListFace_DeleteFace_DeleteFaceFromFaceList_Async()
        {
            Uri endpoint = new Uri("<endpoint>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            FaceListClient client = new FaceAdministrationClient(endpoint, credential).GetFaceListClient();

            Response response = await client.DeleteFaceAsync("your_face_list_id", Guid.Parse("43897a75-8d6f-42cf-885e-74832febb055"));

            Console.WriteLine(response.Status);
        }
    }
}
